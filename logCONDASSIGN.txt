
PROGRAM - 64
  Exe Stack:
int* a; int* b; int v; a = new(0); b = new(0); *a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
int* a; int* b; int v; a = new(0); b = new(0)
*a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
int* a
int* b; int v; a = new(0); b = new(0)
*a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
int* b; int v; a = new(0); b = new(0)
*a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
int* b
int v; a = new(0); b = new(0)
*a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
int v; a = new(0); b = new(0)
*a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->null
b-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
int v
a = new(0); b = new(0)
*a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->null
b-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
a = new(0); b = new(0)
*a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->null
b-->null
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
a = new(0)
b = new(0)
*a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->null
b-->null
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
b = new(0)
*a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->null
v-->0
  Out:
  FileTable:
  Heap:
1-->0
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
*a = 1; *b = 2; v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->0
  Out:
  FileTable:
  Heap:
1-->0
2-->0
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
*a = 1; *b = 2
v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->0
  Out:
  FileTable:
  Heap:
1-->0
2-->0
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
*a = 1
*b = 2
v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->0
  Out:
  FileTable:
  Heap:
1-->0
2-->0
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
*b = 2
v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->0
  Out:
  FileTable:
  Heap:
1-->1
2-->0
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
v=*(a) < *(b)?100:200; print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->0
  Out:
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
v=*(a) < *(b)?100:200
print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->0
  Out:
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
if (*(a) < *(b)) then {v=100} else {v=200}
print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->0
  Out:
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
v=100
print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->0
  Out:
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
print(v); v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->100
  Out:
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
print(v)
v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->100
  Out:
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
v=(*(b) - 2) > *(a)?100:200; print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->100
  Out:
100
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
v=(*(b) - 2) > *(a)?100:200
print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->100
  Out:
100
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
if ((*(b) - 2) > *(a)) then {v=100} else {v=200}
print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->100
  Out:
100
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
v=200
print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->100
  Out:
100
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
print(v)
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->200
  Out:
100
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 64
  Exe Stack:
  Sym Table:
a-->(1,int)
b-->(2,int)
v-->200
  Out:
100
200
  FileTable:
  Heap:
1-->1
2-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
