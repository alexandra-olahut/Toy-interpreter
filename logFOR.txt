
PROGRAM - 66
  Exe Stack:
int v; v=20; for(v=0;v<3;v=(v + 1)) {fork(print(v); v=(v + 1))}; print((v * 10))
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
int v
v=20; for(v=0;v<3;v=(v + 1)) {fork(print(v); v=(v + 1))}; print((v * 10))
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
v=20; for(v=0;v<3;v=(v + 1)) {fork(print(v); v=(v + 1))}; print((v * 10))
  Sym Table:
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
v=20
for(v=0;v<3;v=(v + 1)) {fork(print(v); v=(v + 1))}; print((v * 10))
  Sym Table:
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
for(v=0;v<3;v=(v + 1)) {fork(print(v); v=(v + 1))}; print((v * 10))
  Sym Table:
v-->20
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
for(v=0;v<3;v=(v + 1)) {fork(print(v); v=(v + 1))}
print((v * 10))
  Sym Table:
v-->20
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
v=0; while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->20
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
v=0
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->20
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
fork(print(v); v=(v + 1)); v=(v + 1)
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
fork(print(v); v=(v + 1))
v=(v + 1)
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
v=(v + 1)
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->1
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 67
  Exe Stack:
print(v)
v=(v + 1)
  Sym Table:
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
fork(print(v); v=(v + 1)); v=(v + 1)
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->1
  Out:
0
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 67
  Exe Stack:
v=(v + 1)
  Sym Table:
v-->0
  Out:
0
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
fork(print(v); v=(v + 1))
v=(v + 1)
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->1
  Out:
0
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 67
  Exe Stack:
  Sym Table:
v-->1
  Out:
0
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
v=(v + 1)
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->1
  Out:
0
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->2
  Out:
0
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 68
  Exe Stack:
print(v)
v=(v + 1)
  Sym Table:
v-->1
  Out:
0
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
fork(print(v); v=(v + 1)); v=(v + 1)
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->2
  Out:
0
1
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 68
  Exe Stack:
v=(v + 1)
  Sym Table:
v-->1
  Out:
0
1
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
fork(print(v); v=(v + 1))
v=(v + 1)
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->2
  Out:
0
1
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 68
  Exe Stack:
  Sym Table:
v-->2
  Out:
0
1
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
v=(v + 1)
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->2
  Out:
0
1
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
while (v < 3) {fork(print(v); v=(v + 1)); v=(v + 1)}
print((v * 10))
  Sym Table:
v-->3
  Out:
0
1
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 69
  Exe Stack:
print(v)
v=(v + 1)
  Sym Table:
v-->2
  Out:
0
1
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
print((v * 10))
  Sym Table:
v-->3
  Out:
0
1
2
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 69
  Exe Stack:
v=(v + 1)
  Sym Table:
v-->2
  Out:
0
1
2
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 66
  Exe Stack:
  Sym Table:
v-->3
  Out:
0
1
2
30
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 69
  Exe Stack:
  Sym Table:
v-->3
  Out:
0
1
2
30
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
