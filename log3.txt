
PROGRAM - 35
  Exe Stack:
bool a; int v; a=true; if (a) then {v=2} else {v=3}; print(v)
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 35
  Exe Stack:
bool a
int v; a=true; if (a) then {v=2} else {v=3}; print(v)
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 35
  Exe Stack:
int v; a=true; if (a) then {v=2} else {v=3}; print(v)
  Sym Table:
a-->false
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 35
  Exe Stack:
int v
a=true; if (a) then {v=2} else {v=3}; print(v)
  Sym Table:
a-->false
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 35
  Exe Stack:
a=true; if (a) then {v=2} else {v=3}; print(v)
  Sym Table:
a-->false
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 35
  Exe Stack:
a=true
if (a) then {v=2} else {v=3}; print(v)
  Sym Table:
a-->false
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 35
  Exe Stack:
if (a) then {v=2} else {v=3}; print(v)
  Sym Table:
a-->true
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 35
  Exe Stack:
if (a) then {v=2} else {v=3}
print(v)
  Sym Table:
a-->true
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 35
  Exe Stack:
v=2
print(v)
  Sym Table:
a-->true
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 35
  Exe Stack:
print(v)
  Sym Table:
a-->true
v-->2
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 35
  Exe Stack:
  Sym Table:
a-->true
v-->2
  Out:
2
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
