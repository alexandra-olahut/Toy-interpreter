
PROGRAM - 83
  Exe Stack:
int v; v=20; wait(10); print((v * 10))
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
int v
v=20; wait(10); print((v * 10))
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
v=20; wait(10); print((v * 10))
  Sym Table:
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
v=20
wait(10); print((v * 10))
  Sym Table:
v-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(10); print((v * 10))
  Sym Table:
v-->20
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(10)
print((v * 10))
  Sym Table:
v-->20
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(10); wait(9)
print((v * 10))
  Sym Table:
v-->20
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(10)
wait(9)
print((v * 10))
  Sym Table:
v-->20
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(9)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(9); wait(8)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(9)
wait(8)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(8)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(8); wait(7)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(8)
wait(7)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(7)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(7); wait(6)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(7)
wait(6)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(6)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(6); wait(5)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(6)
wait(5)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(5)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(5); wait(4)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(5)
wait(4)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(4)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(4); wait(3)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(4)
wait(3)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(3)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(3); wait(2)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(3)
wait(2)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(2)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
3
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(2); wait(1)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
3
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(2)
wait(1)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
3
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(1)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
3
2
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(1); wait(0)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
3
2
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print(1)
wait(0)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
3
2
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
wait(0)
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
3
2
1
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
print((v * 10))
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
3
2
1
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 83
  Exe Stack:
  Sym Table:
v-->20
  Out:
10
9
8
7
6
5
4
3
2
1
200
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
