
PROGRAM - 81
  Exe Stack:
int a; int b; int c; a=1; b=2; c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
int a
int b; int c; a=1; b=2; c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
int b; int c; a=1; b=2; c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
int b
int c; a=1; b=2; c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
int c; a=1; b=2; c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->0
b-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
int c
a=1; b=2; c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->0
b-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
a=1; b=2; c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->0
b-->0
c-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
a=1
b=2; c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->0
b-->0
c-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
b=2; c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->1
b-->0
c-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
b=2
c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->1
b-->0
c-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
c=5; switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->1
b-->2
c-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
c=5
switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->1
b-->2
c-->0
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300)); print(300)
  Sym Table:
a-->1
b-->2
c-->5
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
switch((a * 10)) (case (b * c): print(a); print(b))(case 10: print(100); print(200))(default: print(300))
print(300)
  Sym Table:
a-->1
b-->2
c-->5
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
if ((a * 10) == (b * c)) then {print(a); print(b)} else {if ((a * 10) == 10) then {print(100); print(200)} else {print(300)}}
print(300)
  Sym Table:
a-->1
b-->2
c-->5
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
print(a); print(b)
print(300)
  Sym Table:
a-->1
b-->2
c-->5
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
print(a)
print(b)
print(300)
  Sym Table:
a-->1
b-->2
c-->5
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
print(b)
print(300)
  Sym Table:
a-->1
b-->2
c-->5
  Out:
1
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
print(300)
  Sym Table:
a-->1
b-->2
c-->5
  Out:
1
2
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 81
  Exe Stack:
  Sym Table:
a-->1
b-->2
c-->5
  Out:
1
2
300
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
