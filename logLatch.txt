
PROGRAM - 95
  Exe Stack:
int* v1; int* v2; int* v3; int cnt; v1 = new(2); v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
int* v1
int* v2; int* v3; int cnt; v1 = new(2); v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
int* v2; int* v3; int cnt; v1 = new(2); v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
v1-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
int* v2
int* v3; int cnt; v1 = new(2); v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
v1-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
int* v3; int cnt; v1 = new(2); v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
v1-->null
v2-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
int* v3
int cnt; v1 = new(2); v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
v1-->null
v2-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
int cnt; v1 = new(2); v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
v1-->null
v2-->null
v3-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
int cnt
v1 = new(2); v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
v1-->null
v2-->null
v3-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
v1 = new(2); v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->null
v2-->null
v3-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
v1 = new(2)
v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->null
v2-->null
v3-->null
  Out:
  FileTable:
  Heap:
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
v2 = new(3); v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->null
v3-->null
  Out:
  FileTable:
  Heap:
1-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
v2 = new(3)
v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->null
v3-->null
  Out:
  FileTable:
  Heap:
1-->2
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
v3 = new(4); newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->null
  Out:
  FileTable:
  Heap:
1-->2
2-->3
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
v3 = new(4)
newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->null
  Out:
  FileTable:
  Heap:
1-->2
2-->3
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
newLatch(cnt,*(v2)); fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->2
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
newLatch(cnt,*(v2))
fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->2
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:

PROGRAM - 95
  Exe Stack:
fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))); await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->2
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 95
  Exe Stack:
fork(*v1 = (*(v1) * 10); print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt))))
await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->2
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 95
  Exe Stack:
await(cnt); print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->2
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->2
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 96
  Exe Stack:
*v1 = (*(v1) * 10)
print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->2
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 96
  Exe Stack:
print(*(v1)); countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 96
  Exe Stack:
print(*(v1))
countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 96
  Exe Stack:
countDown(cnt); fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 96
  Exe Stack:
countDown(cnt)
fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->3

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 96
  Exe Stack:
fork(*v2 = (*(v2) * 10); print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt)))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 96
  Exe Stack:
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 97
  Exe Stack:
*v2 = (*(v2) * 10)
print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
  FileTable:
  Heap:
1-->20
2-->3
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 97
  Exe Stack:
print(*(v2)); countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 97
  Exe Stack:
print(*(v2))
countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 97
  Exe Stack:
countDown(cnt); fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 97
  Exe Stack:
countDown(cnt)
fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->2

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 97
  Exe Stack:
fork(*v3 = (*(v3) * 10); print(*(v3)); countDown(cnt))
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 97
  Exe Stack:
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 98
  Exe Stack:
*v3 = (*(v3) * 10)
print(*(v3)); countDown(cnt)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
  FileTable:
  Heap:
1-->20
2-->30
3-->4
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 98
  Exe Stack:
print(*(v3)); countDown(cnt)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 98
  Exe Stack:
print(*(v3))
countDown(cnt)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
40
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 98
  Exe Stack:
countDown(cnt)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
40
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->1

PROGRAM - 95
  Exe Stack:
await(cnt)
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
40
98
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->0

PROGRAM - 98
  Exe Stack:
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
40
98
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->0

PROGRAM - 95
  Exe Stack:
print(100); countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
40
98
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->0

PROGRAM - 95
  Exe Stack:
print(100)
countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
40
98
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->0

PROGRAM - 95
  Exe Stack:
countDown(cnt); print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
40
98
100
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->0

PROGRAM - 95
  Exe Stack:
countDown(cnt)
print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
40
98
100
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->0

PROGRAM - 95
  Exe Stack:
print(100)
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
40
98
100
95
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->0

PROGRAM - 95
  Exe Stack:
  Sym Table:
cnt-->0
v1-->(1,int)
v2-->(2,int)
v3-->(3,int)
  Out:
20
96
30
97
40
98
100
95
100
  FileTable:
  Heap:
1-->20
2-->30
3-->40
  BarrierTable:
  SemaphoreTable:
  LockTable:
  LatchTable:
0-->0
